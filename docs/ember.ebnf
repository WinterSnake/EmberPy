module: declaration*;

# Declarations
declaration: declaration_function | declaration_statement;
declaration_function: 'fn' IDENTIFIER '(' ')' ':' TYPE '{' declaration_statement* '}';
declaration_statement: declaration_variable | statement;
declaration_variable: TYPE IDENTIFIER ('=' expression)? ';';

# Statements
statement: statement_block | statement_condition | statement_loop_while | statement_expression;
statement_block: '{' declaration_statement* '}';
statement_condition: 'if' '(' expression ')' statement ('else' statement)?;
statement_loop_while: 'while' '(' expression ')' statement;
statement_expression: expression ';';

# Expressions
expression: expression_binary ('=' expression)?;
expression_binary: expression_primary (BINARY_OPERATOR expression_primary)*;
expression_primary: IDENTIFIER | BOOLEAN | NUMBER | '(' expression ')';

# Symbols
BINARY_OPERATORS: '+' | '-' | '*' | '/' | '%' | '<' | '>' | '<=' | '>=' | '==' | '!=';

# Keywords
INTS: "int8" | "int16" | "int32" | "int64";
UINTS: "uint8" | "uint16" | "uint32" | "uint64";
BUILTIN_TYPE: "void" | "bool" | INTS | UINTS;
TYPE: BUILTIN_TYPE;

# Literals
BOOLEAN: "true" | "false";
