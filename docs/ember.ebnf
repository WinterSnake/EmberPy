module: statement*;
declaration_variable: TYPE IDENTIFIER ';';
statement: declaration_variable | statement_expression | statement_assignment;
statement_assignment: IDENTIFIER '=' expression ';';
statement_expression: expression ';';
expression: expression_literal;
expression_binary: expression_primary (BINARY_OPERATOR expression_primary)*;
expression_primary: IDENTIFIER | NUMBER | '(' expression ')';

# -Symbols
BINARY_OPERATORS: '+' | '-' | '*' | '/' | '%' | '<' | '>' | '<=' | '>=' | '==' | '!=';

# -Keywords
INTS: "int8" | "int16" | "int32" | "int64";
UINTS: "uint8" | "uint16" | "uint32" | "uint64";
BUILTIN_TYPE: "void" | "bool" | INTS | UINTS;
TYPE: BUILTIN_TYPE;
